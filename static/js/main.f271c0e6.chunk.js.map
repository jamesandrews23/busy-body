{"version":3,"sources":["Parser.js","NewsTiles.js","Paginate.js","SortBySelect.js","FeedFeeder.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["domParser","DOMParser","setObjectType","obj","node","currentValue","nodeName","Array","isArray","push","convertXmlToJson","xmlString","xml","parseFromString","parse","xmlDoc","i","length","hasAttributes","attributes","getAttributeNames","objAttributes","j","getAttribute","textContent","children","doc","body","console","error","log","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","loading","margin","marginBottom","getImageUrl","url","rssImage","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","Footer","classes","className","gutterBottom","component","NewsTiles","props","listSize","list","pageSize","pageNumber","pageCount","rss","Math","ceil","useState","page","setPage","pages","slice","Container","maxWidth","Grid","container","map","index","Grow","key","in","item","xs","sm","md","Card","CardHeader","title","rssTitle","subheader","pubDate","CardMedia","image","CardContent","description","CardActions","Button","size","onClick","window","location","link","justify","root","style","Pagination","count","onChange","event","value","Alert","severity","CircularProgress","formControl","minWidth","selectEmpty","border","fill","sortColor","SortBySelect","React","sortBy","setSortBy","FormControl","Select","labelId","id","target","sort","displayEmpty","inputProps","MenuItem","titles","Feed","path","this","proxy","feedKey","feeds","getFeeds","bind","getProxy","getStoredFeeds","setStoredFeeds","addAFeed","initialize","storedFeeds","feed","axios","get","encodeURI","JSON","localStorage","getItem","e","setItem","stringify","currentFeeds","unshift","search","position","borderRadius","shape","fade","common","white","marginLeft","width","breakpoints","up","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","add","bottom","right","wrapper","buttonSuccess","green","buttonProgress","top","left","Main","open","setOpen","setLoading","showAlert","setShowAlert","alertMsg","setAlertMsg","alertType","setAlertType","handleClose","Fragment","CssBaseline","AppBar","Toolbar","noWrap","InputBase","placeholder","input","paragraph","onClose","Tooltip","Fab","aria-label","aria-labelledby","DialogContentText","autoFocus","label","type","fullWidth","document","getElementById","instance","defaults","timeout","interceptors","request","use","config","Promise","reject","response","FeedFeeder","then","data","convertedFeed","addFeed","catch","disabled","rssOriginal","rssTitles","createMuiTheme","primary","main","secondary","App","state","transformFeeds","regSearchValue","RegExp","foundItems","_","cloneDeep","filter","setState","foundFeed","find","that","all","results","result","objFeed","isEmpty","forEach","convertedFeeds","element","updateFeed","feedToAdd","newFeeds","transformedAddedFeed","concat","ThemeProvider","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f271c0e6.chunk.js","sourcesContent":["const domParser = new DOMParser();\r\n\r\n/*\r\n Pattern XML\t                        JSON\t                                        Access\r\n 1\t<e/>\t                            \"e\": null\t                                    o.e\r\n 2\t<e>text</e>\t                        \"e\": \"text\"\t                                    o.e\r\n 3\t<e name=\"value\" />\t                \"e\":{\"@name\": \"value\"}\t                        o.e[\"@name\"]\r\n 4\t<e name=\"value\">text</e>\t        \"e\": { \"@name\": \"value\", \"#text\": \"text\" }\t    o.e[\"@name\"] o.e[\"#text\"]\r\n 5\t<e> <a>text</a> <b>text</b> </e>\t\"e\": { \"a\": \"text\", \"b\": \"text\" }\t            o.e.a o.e.b\r\n 6\t<e> <a>text</a> <a>text</a> </e>\t\"e\": { \"a\": [\"text\", \"text\"] }\t                o.e.a[0] o.e.a[1]\r\n 7\t<e> text <a>text</a> </e>\t        \"e\": { \"#text\": \"text\", \"a\": \"text\" }\t        o.e[\"#text\"] o.e.a\r\n */\r\n\r\nfunction setObjectType(obj, node){\r\n    let currentValue = obj[node.nodeName];\r\n    if(currentValue){\r\n        if(Array.isArray(currentValue)){\r\n            obj[node.nodeName].push({});\r\n        } else {\r\n            obj[node.nodeName] = [currentValue, {}];\r\n        }\r\n    } else {\r\n        obj[node.nodeName] = {};\r\n    }\r\n}\r\n\r\nfunction parse(xmlDoc, obj){\r\n    if(xmlDoc){\r\n        for(var i = 0; i < xmlDoc.length; i++){\r\n            let node = xmlDoc[i];\r\n            if(node){\r\n                if(node.hasAttributes()){\r\n                    setObjectType(obj, node);\r\n                    let attributes = node.getAttributeNames(); //an array of attribute names\r\n                    let objAttributes = {};\r\n                    for(var j = 0; j < attributes.length; j++){\r\n                        objAttributes[\"@\" + attributes[j]] = node.getAttribute(attributes[j]);\r\n                    }\r\n                    objAttributes[\"#text\"] = node.textContent;\r\n                    if(Array.isArray(obj[node.nodeName])){\r\n                        obj[node.nodeName][obj[node.nodeName].length - 1] = objAttributes;\r\n                    } else {\r\n                        obj[node.nodeName] = objAttributes;\r\n                    }\r\n\r\n                    if(node.children.length > 0){\r\n                        // obj[node.firstElementChild.nodeName] = {};\r\n                        parse(node.children, obj); //send obj with that name\r\n                    }\r\n                } else if(node.children.length > 0){\r\n                    setObjectType(obj, node);\r\n                    parse(node.children, Array.isArray(obj[node.nodeName]) ? obj[node.nodeName][obj[node.nodeName].length - 1] : obj[node.nodeName]); //send obj with that name\r\n                } else {\r\n                    let doc = domParser.parseFromString(node.textContent, 'text/html');\r\n                    obj[node.nodeName] = doc.body.textContent || \"\";\r\n                }\r\n            }\r\n        }\r\n\r\n    } else {\r\n        console.error(\"List is not defined\");\r\n    }\r\n}\r\n\r\nexport default function convertXmlToJson(xmlString){\r\n    let obj = {};\r\n    let xml = domParser.parseFromString(xmlString, \"application/xml\");\r\n    if(xml){\r\n        parse(xml.children, obj);\r\n        // console.log(obj);\r\n    } else {\r\n        console.log(\"Invalid XML string: \" + xmlString);\r\n    }\r\n    return obj;\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {paginate, getPageCount, getElementsPerPage} from './Paginate';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n    loading: {\r\n        marginTop: '50px'\r\n    },\r\n    margin: {\r\n        marginTop: '100px',\r\n        marginBottom: '100px'\r\n    }\r\n}));\r\n\r\nfunction getImageUrl(card){\r\n    let url = \"\";\r\n\r\n    if(card[\"media:content\"] && card[\"media:content\"][\"@url\"]){\r\n        url = card[\"media:content\"][\"@url\"];\r\n    } else if(card[\"media:group\"] && card[\"media:group\"][\"media:content\"] && card[\"media:group\"][\"media:content\"][1][\"@url\"]){\r\n        url = card[\"media:group\"][\"media:content\"][1][\"@url\"];\r\n    } else if(card[\"media:thumbnail\"] && card[\"media:thumbnail\"][\"@url\"]){\r\n        url = card[\"media:thumbnail\"][\"@url\"];\r\n    } else {\r\n        if(card.rssImage && card.rssImage.url){\r\n            url = card.rssImage.url;\r\n        }\r\n    }\r\n\r\n    return url;\r\n}\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                busyBodyFeeder.com\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction Footer(){\r\n    let classes = useStyles();\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                Busy Body RSS Feeder\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                Thanks for checking out the site\r\n            </Typography>\r\n            <Copyright />\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default function NewsTiles(props) {\r\n    const classes = useStyles();\r\n    const pageCount = getPageCount(props.rss.length);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const handleChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const pages = paginate(props.rss, getElementsPerPage(), page);\r\n\r\n    return props.rss.length > 0 && !props.error ? (\r\n        <div>\r\n            <Container className={classes.cardGrid} maxWidth=\"lg\">\r\n                {/* End hero unit */}\r\n                <Grid container spacing={4}>\r\n                    {pages.map((card, index, list) => (\r\n                        <Grow key={index} in={true}>\r\n                            <Grid item key={index} xs={12} sm={6} md={4}>\r\n                                <Card className={classes.card}>\r\n                                    <CardHeader\r\n                                        // avatar={\r\n                                        //     <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        //         R\r\n                                        //     </Avatar>\r\n                                        // }\r\n                                        // action={\r\n                                        //     <IconButton aria-label=\"settings\">\r\n                                        //         <MoreVertIcon />\r\n                                        //     </IconButton>\r\n                                        // }\r\n                                        title={card && card.rssTitle ? card.rssTitle : \"\"}\r\n                                        subheader={card && card.pubDate ? card.pubDate : \"\"}\r\n                                    />\r\n                                    <CardMedia\r\n                                        className={classes.cardMedia}\r\n                                        image={getImageUrl(card)}\r\n                                        title=\"Image title\"\r\n                                    />\r\n                                    <CardContent className={classes.cardContent}>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            {card.title}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {card.description}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        <Button size=\"small\" color=\"primary\" onClick={() => {\r\n                                            window.location = card.link\r\n                                        }}>\r\n                                            View\r\n                                        </Button>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grow>\r\n                    ))}\r\n                </Grid>\r\n                <Grid container justify=\"center\">\r\n                    <div className={classes.root} style={{marginBottom: \"50px\", marginTop: \"150px\"}}>\r\n                        <Pagination count={pageCount} color=\"secondary\" onChange={handleChange} />\r\n                    </div>\r\n                </Grid>\r\n            </Container>\r\n            <Footer />\r\n        </div>\r\n    ) : !props.error ? (\r\n        <Grid container justify=\"center\">\r\n            <CircularProgress className={classes.loading}/>\r\n        </Grid>\r\n    ) : (\r\n        <div>\r\n            <Grid container justify=\"center\">\r\n                <Alert severity=\"error\" className={classes.margin}>Unable to load rss feeds. Please try again later.</Alert>\r\n            </Grid>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}","const max = 30;\r\n\r\nfunction paginate(list, pageSize, pageNumber) {\r\n    if(list.length <= max){\r\n        return list; //if it's not more than the max, no pages are necessary\r\n    }\r\n\r\n    return list.slice((pageNumber - 1) * pageSize, pageNumber * pageSize);\r\n}\r\n\r\nfunction getPageCount(listSize){\r\n    return Math.ceil(listSize / max);\r\n}\r\n\r\nfunction getElementsPerPage(){\r\n    return max;\r\n}\r\n\r\nexport {paginate, getPageCount, getElementsPerPage}","import React from \"react\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        color: \"#fff\"\r\n    },\r\n    selectEmpty: {\r\n        // marginTop: theme.spacing(2),\r\n        color: \"#fff\",\r\n        \"&:before\": {\r\n            border: \"none\"\r\n        },\r\n        '&:hover:not(.Mui-disabled):before': {\r\n            border: 'none',\r\n        }\r\n    },\r\n    icon: {\r\n        fill: \"#fff\",\r\n    },\r\n    sortColor: {\r\n        color: \"fff\"\r\n    }\r\n}));\r\n\r\nexport default function SortBySelect(props){\r\n    const classes = useStyles();\r\n    const [sortBy, setSortBy] = React.useState('');\r\n\r\n    const handleChange = (event) => {\r\n        let value = event.target.value;\r\n        setSortBy(value);\r\n        props.sort(value)\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Select\r\n                labelId=\"sortBy\"\r\n                id=\"sort\"\r\n                value={sortBy}\r\n                onChange={handleChange}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n                inputProps={{\r\n                classes: {\r\n                    icon: classes.icon,\r\n                },\r\n            }}\r\n\r\n            >\r\n                <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                </MenuItem>\r\n                {props.titles && props.titles.length > 0 && props.titles.map((title, index) => (\r\n                    <MenuItem key={index} value={title}>{title}</MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nclass Feed {\r\n    constructor(id, path){\r\n        this.id = id;\r\n        this.path = path;\r\n    }\r\n\r\n    getPath(){\r\n        return this.path;\r\n    }\r\n\r\n    getId(){\r\n        return this.id;\r\n    }\r\n}\r\n\r\nclass FeedFeeder {\r\n    constructor(){\r\n        // this.proxy = \"https://thingproxy.freeboard.io/fetch/\";\r\n        this.proxy = \"https://api.allorigins.win/raw?url=\";\r\n        this.feedKey = \"busyBodyFeeds\";\r\n        this.feeds = [new Feed('cnn', 'http://rss.cnn.com/rss/cnn_topstories.rss'),\r\n            new Feed('bbc', 'http://feeds.bbci.co.uk/news/rss.xml#'),\r\n            new Feed('fox', 'http://feeds.foxnews.com/foxnews/latest'),\r\n            new Feed('wsj', 'https://feeds.a.dj.com/rss/RSSWSJD.xml'),\r\n            new Feed('nyt', 'https://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml'),\r\n            new Feed('yahoo', 'https://www.yahoo.com/news/rss/world')];\r\n        this.getFeeds = this.getFeeds.bind(this);\r\n        this.getProxy = this.getProxy.bind(this);\r\n        this.getStoredFeeds = this.getStoredFeeds.bind(this);\r\n        this.setStoredFeeds = this.setStoredFeeds.bind(this);\r\n        this.addAFeed = this.addAFeed.bind(this);\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        let storedFeeds = this.getStoredFeeds();\r\n        if(storedFeeds && storedFeeds.length > 0){\r\n            this.feeds = storedFeeds;\r\n        } else {\r\n            this.setStoredFeeds(this.feeds);\r\n        }\r\n    }\r\n\r\n    getFeeds(){\r\n        let currentFeeds = this.getStoredFeeds();\r\n\r\n        return currentFeeds.map((feed) => {\r\n            return axios.get(this.proxy + encodeURI(feed[\"path\"]));\r\n        });\r\n    }\r\n\r\n    getProxy(){\r\n        return this.proxy;\r\n    }\r\n\r\n    getStoredFeeds(){\r\n        try {\r\n            let parsedFeed = JSON.parse(localStorage.getItem(this.feedKey));\r\n            return parsedFeed || [];\r\n        } catch(e){\r\n            return [];\r\n        }\r\n    }\r\n\r\n    setStoredFeeds(feeds){\r\n        localStorage.setItem(this.feedKey, JSON.stringify(feeds));\r\n    }\r\n\r\n    addAFeed(id, path){\r\n        let currentFeeds = this.getStoredFeeds();\r\n        currentFeeds.unshift(new Feed(id, path));\r\n        this.setStoredFeeds(currentFeeds);\r\n    }\r\n}\r\n\r\nexport default new FeedFeeder();\r\n\r\n","import NewsTiles from './NewsTiles';\r\nimport React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport RssFeedIcon from '@material-ui/icons/RssFeed';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SortBySelect from './SortBySelect';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\r\nimport axios from \"axios\";\r\nimport convertXmlToJson from \"./Parser\";\r\nimport FeedFeeder from \"./FeedFeeder\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    add: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(3)\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    buttonSuccess: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n    buttonProgress: {\r\n        color: green[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function Main(props){\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showAlert, setShowAlert] = React.useState(false);\r\n    const [alertMsg, setAlertMsg] = React.useState(\"An error has occurred. Please try again later\");\r\n    const [alertType, setAlertType] = React.useState(\"error\");\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const subscribe = () => {\r\n        let url = document.getElementById('name').value;\r\n        if(url){\r\n            const instance = axios.create();\r\n            instance.defaults.timeout = 10000;\r\n            // Add a request interceptor\r\n            instance.interceptors.request.use(function (config) {\r\n                setLoading(true);\r\n                return config;\r\n            }, function (error) {\r\n                // Do something with request error\r\n                setLoading(false);\r\n                setOpen(false);\r\n                return Promise.reject(error);\r\n            });\r\n\r\n            // Add a response interceptor\r\n            instance.interceptors.response.use(function (response) {\r\n                setLoading(false);\r\n                setOpen(false);\r\n                return response;\r\n            }, function (error) {\r\n                // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n                // Do something with response error\r\n                setLoading(false);\r\n                setOpen(false);\r\n                return Promise.reject(error);\r\n            });\r\n\r\n            instance.get(FeedFeeder.getProxy() + encodeURI(url))\r\n                .then(response => {\r\n                    if(response.data){\r\n                        try {\r\n                            let convertedFeed = convertXmlToJson(response.data);\r\n                            if(convertedFeed && convertedFeed[\"channel\"]){\r\n                                props.addFeed(convertedFeed[\"channel\"], url);\r\n                                setShowAlert(true);\r\n                                setAlertMsg(\"Feed \" + url + \" successfully added!\");\r\n                                setAlertType(\"success\");\r\n                            } else {\r\n                                setShowAlert(true);\r\n                                setAlertMsg(\"Failed to load RSS Feed: \" + url);\r\n                            }\r\n                        } catch(error){\r\n                            setShowAlert(true);\r\n                            setAlertMsg(\"Failed to load RSS Feed: \" + url);\r\n                        }\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setShowAlert(true);\r\n                    setAlertMsg(\"Failed to load RSS Feed: \" + url);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <RssFeedIcon/>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        RSS\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={props.search}\r\n                        />\r\n                    </div>\r\n                    <SortBySelect titles={props.titles} sort={props.sort} />\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <main>\r\n                {/* Hero unit */}\r\n                <div className={classes.heroContent}>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                            Daily Feeds\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                            Are you a busy body when it comes to news? Take a gander at all these articles from various RSS feeds.\r\n                            You can search for feeds in the search bar or sort by your favorite feeds.\r\n                        </Typography>\r\n                    </Container>\r\n                </div>\r\n                {showAlert && alertMsg && <Alert severity={alertType} onClose={() => setShowAlert(false)}>{alertMsg}</Alert>}\r\n                <Tooltip title=\"Add RSS Feed\">\r\n                    <Fab color=\"secondary\" aria-label=\"add\" className={classes.add} onClick={handleClickOpen}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Tooltip>\r\n                <NewsTiles rss={props.rss} error={props.error} />\r\n            </main>\r\n            <div>\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            To subscribe to an RSS feed please enter the URL here.\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"RSS Feed\"\r\n                            type=\"email\"\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button onClick={subscribe} color=\"primary\" disabled={loading}>\r\n                                Subscribe\r\n                            </Button>\r\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport _ from 'lodash';\r\nimport convertXmlToJson from './Parser';\r\nimport Main from './Main';\r\nimport FeedFeeder from './FeedFeeder';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nlet rssOriginal = [];\r\nlet rssTitles = [];\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#aa0000',\r\n        },\r\n        secondary: {\r\n            main: '#26a69a',\r\n        },\r\n    },\r\n});\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            rss: [],\r\n            error: false\r\n        };\r\n\r\n        this.search = this.search.bind(this);\r\n        this.sort = this.sort.bind(this);\r\n        this.transformFeeds = this.transformFeeds.bind(this);\r\n        this.addFeed = this.addFeed.bind(this);\r\n    }\r\n\r\n    search(e){\r\n        let value = e.target.value;\r\n        if(value === \"\"){\r\n            this.setState({rss: _.cloneDeep(this.transformFeeds(rssOriginal))});\r\n            return;\r\n        }\r\n\r\n        if(value.length >= 3){\r\n            let regSearchValue = new RegExp(value, 'gi');\r\n\r\n            const items = _.cloneDeep(this.state.rss);\r\n\r\n            let foundItems = items.filter((item) => {\r\n                return (item && item[\"description\"] && (item[\"description\"].search(regSearchValue) !== -1))\r\n                    || (item && item[\"title\"] && (item[\"title\"].search(regSearchValue) !== -1));\r\n            });\r\n\r\n            if(foundItems.length > 0){\r\n                this.setState({rss: foundItems});\r\n            }\r\n        }\r\n    }\r\n\r\n    sort(feed){\r\n        if(feed === \"\"){\r\n            this.setState({rss: this.transformFeeds(rssOriginal)});\r\n            return;\r\n        }\r\n\r\n        const rssFeeds = _.cloneDeep(rssOriginal);\r\n        let foundFeed = rssFeeds.find(rss => (\r\n            rss && rss[\"title\"] && rss[\"title\"] === feed\r\n        ));\r\n\r\n        if(foundFeed){\r\n            this.setState({rss: this.transformFeeds(foundFeed)});\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var that = this;\r\n        Promise.all(FeedFeeder.getFeeds())\r\n            .then((results) => {\r\n                let feeds = results.map(function(result) {\r\n                    let objFeed = convertXmlToJson(result.data);\r\n                    if(!_.isEmpty(objFeed) && objFeed[\"channel\"]){\r\n                        return objFeed[\"channel\"];\r\n                    }\r\n                });\r\n                rssOriginal = feeds;\r\n                feeds.forEach(feed => {\r\n                    if(feed){\r\n                        rssTitles.push(feed[\"title\"]);\r\n                    }\r\n                });\r\n                that.setState({rss: that.transformFeeds(feeds)});\r\n            })\r\n            .catch((error) => {\r\n                that.setState({error: true});\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    updateFeed(feed, convertedFeeds){\r\n        if(feed){\r\n            let title = feed[\"title\"];\r\n            let item = feed[\"item\"];\r\n            let image = feed[\"image\"];\r\n\r\n            if(item){\r\n                for(var j=0; j<item.length; j++){\r\n                    let element = item[j];\r\n                    element[\"rssTitle\"] = title;\r\n                    element[\"rssImage\"] = image;\r\n                    convertedFeeds.push(element);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    transformFeeds(feeds){\r\n        //converts the feed to an object of only items containing the rss title\r\n        let convertedFeeds = [];\r\n        if(feeds && feeds.length){\r\n            for(var i=0; i<feeds.length;i++){\r\n                let feed = feeds[i];\r\n                this.updateFeed(feed, convertedFeeds);\r\n            }\r\n        } else if(feeds) {\r\n            this.updateFeed(feeds, convertedFeeds);\r\n        }\r\n\r\n        return convertedFeeds;\r\n    }\r\n\r\n    addFeed(feedToAdd, url){\r\n        let newFeeds = [];\r\n        let transformedAddedFeed = this.transformFeeds(feedToAdd);\r\n        let currentFeeds = _.cloneDeep(this.state.rss);\r\n        newFeeds = newFeeds.concat(transformedAddedFeed, currentFeeds);\r\n        this.setState({rss: newFeeds});\r\n        FeedFeeder.addAFeed('', url);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ThemeProvider theme={theme}>\r\n                    <Main rss={this.state.rss} error={this.state.error} titles={rssTitles} search={this.search} sort={this.sort} addFeed={this.addFeed} />\r\n                </ThemeProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}