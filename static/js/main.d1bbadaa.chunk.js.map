{"version":3,"sources":["Parser.js","NewsTiles.js","Paginate.js","SortBySelect.js","Main.js","FeedFeeder.js","App.js","serviceWorker.js","index.js"],"names":["domParser","DOMParser","setObjectType","obj","node","currentValue","nodeName","Array","isArray","push","convertXmlToJson","xmlString","xml","parseFromString","parse","xmlDoc","i","length","hasAttributes","attributes","getAttributeNames","objAttributes","j","getAttribute","textContent","children","doc","body","console","error","log","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","loading","alignContent","alignItems","margin","textAlign","marginBottom","getImageUrl","url","rssImage","NewsTiles","props","listSize","list","pageSize","pageNumber","classes","pageCount","rss","Math","ceil","useState","page","setPage","pages","slice","Container","className","maxWidth","Grid","container","map","index","item","key","xs","sm","md","Card","CardHeader","title","rssTitle","subheader","pubDate","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","description","CardActions","Button","size","color","onClick","window","location","link","justify","root","style","Pagination","count","onChange","event","value","Alert","severity","CircularProgress","formControl","minWidth","selectEmpty","border","fill","sortColor","SortBySelect","React","sortBy","setSortBy","FormControl","Select","labelId","id","target","sort","displayEmpty","inputProps","MenuItem","titles","Copyright","align","Link","href","Date","getFullYear","search","position","borderRadius","shape","fade","common","white","marginLeft","width","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Main","Fragment","CssBaseline","AppBar","Toolbar","noWrap","InputBase","placeholder","input","paragraph","Feed","path","this","feeds","rssOriginal","rssTitles","App","state","bind","transformFeeds","e","regSearchValue","RegExp","foundItems","_","cloneDeep","filter","setState","feed","foundFeed","find","that","Promise","all","axios","get","encodeURI","getPath","then","results","result","objFeed","data","isEmpty","forEach","catch","convertedFeeds","element","updateFeed","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d1bbadaa.chunk.js","sourcesContent":["const domParser = new DOMParser();\r\n\r\n/*\r\n Pattern XML\t                        JSON\t                                        Access\r\n 1\t<e/>\t                            \"e\": null\t                                    o.e\r\n 2\t<e>text</e>\t                        \"e\": \"text\"\t                                    o.e\r\n 3\t<e name=\"value\" />\t                \"e\":{\"@name\": \"value\"}\t                        o.e[\"@name\"]\r\n 4\t<e name=\"value\">text</e>\t        \"e\": { \"@name\": \"value\", \"#text\": \"text\" }\t    o.e[\"@name\"] o.e[\"#text\"]\r\n 5\t<e> <a>text</a> <b>text</b> </e>\t\"e\": { \"a\": \"text\", \"b\": \"text\" }\t            o.e.a o.e.b\r\n 6\t<e> <a>text</a> <a>text</a> </e>\t\"e\": { \"a\": [\"text\", \"text\"] }\t                o.e.a[0] o.e.a[1]\r\n 7\t<e> text <a>text</a> </e>\t        \"e\": { \"#text\": \"text\", \"a\": \"text\" }\t        o.e[\"#text\"] o.e.a\r\n */\r\n\r\nfunction setObjectType(obj, node){\r\n    let currentValue = obj[node.nodeName];\r\n    if(currentValue){\r\n        if(Array.isArray(currentValue)){\r\n            obj[node.nodeName].push({});\r\n        } else {\r\n            obj[node.nodeName] = [currentValue, {}];\r\n        }\r\n    } else {\r\n        obj[node.nodeName] = {};\r\n    }\r\n}\r\n\r\nfunction parse(xmlDoc, obj){\r\n    if(xmlDoc){\r\n        for(var i = 0; i < xmlDoc.length; i++){\r\n            let node = xmlDoc[i];\r\n            if(node){\r\n                if(node.hasAttributes()){\r\n                    setObjectType(obj, node);\r\n                    let attributes = node.getAttributeNames(); //an array of attribute names\r\n                    let objAttributes = {};\r\n                    for(var j = 0; j < attributes.length; j++){\r\n                        objAttributes[\"@\" + attributes[j]] = node.getAttribute(attributes[j]);\r\n                    }\r\n                    objAttributes[\"#text\"] = node.textContent;\r\n                    if(Array.isArray(obj[node.nodeName])){\r\n                        obj[node.nodeName][obj[node.nodeName].length - 1] = objAttributes;\r\n                    } else {\r\n                        obj[node.nodeName] = objAttributes;\r\n                    }\r\n\r\n                    if(node.children.length > 0){\r\n                        // obj[node.firstElementChild.nodeName] = {};\r\n                        parse(node.children, obj); //send obj with that name\r\n                    }\r\n                } else if(node.children.length > 0){\r\n                    setObjectType(obj, node);\r\n                    parse(node.children, Array.isArray(obj[node.nodeName]) ? obj[node.nodeName][obj[node.nodeName].length - 1] : obj[node.nodeName]); //send obj with that name\r\n                } else {\r\n                    let doc = domParser.parseFromString(node.textContent, 'text/html');\r\n                    obj[node.nodeName] = doc.body.textContent || \"\";\r\n                }\r\n            }\r\n        }\r\n\r\n    } else {\r\n        console.error(\"List is not defined\");\r\n    }\r\n}\r\n\r\nexport default function convertXmlToJson(xmlString){\r\n    let obj = {};\r\n    let xml = domParser.parseFromString(xmlString, \"application/xml\");\r\n    if(xml){\r\n        parse(xml.children, obj);\r\n        // console.log(obj);\r\n    } else {\r\n        console.log(\"Invalid XML string: \" + xmlString);\r\n    }\r\n    return obj;\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {paginate, getPageCount, getElementsPerPage} from './Paginate';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n    loading: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        margin: 'auto',\r\n        textAlign: 'center'\r\n    },\r\n    margin: {\r\n        marginTop: '100px',\r\n        marginBottom: '100px'\r\n    }\r\n}));\r\n\r\nfunction getImageUrl(card){\r\n    let url = \"\";\r\n\r\n    if(card[\"media:content\"] && card[\"media:content\"][\"@url\"]){\r\n        url = card[\"media:content\"][\"@url\"];\r\n    } else if(card[\"media:group\"] && card[\"media:group\"][\"media:content\"] && card[\"media:group\"][\"media:content\"][1][\"@url\"]){\r\n        url = card[\"media:group\"][\"media:content\"][1][\"@url\"];\r\n    } else {\r\n        if(card.rssImage && card.rssImage.url){\r\n            url = card.rssImage.url;\r\n        }\r\n    }\r\n\r\n    return url;\r\n}\r\n\r\nexport default function NewsTiles(props) {\r\n    const classes = useStyles();\r\n    const pageCount = getPageCount(props.rss.length);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const handleChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const pages = paginate(props.rss, getElementsPerPage(), page);\r\n\r\n    return props.rss.length > 0 && !props.error ? (\r\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\r\n            {/* End hero unit */}\r\n            <Grid container spacing={4}>\r\n                {pages.map((card, index, list) => (\r\n                    <Grid item key={index} xs={12} sm={6} md={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardHeader\r\n                                // avatar={\r\n                                //     <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                //         R\r\n                                //     </Avatar>\r\n                                // }\r\n                                // action={\r\n                                //     <IconButton aria-label=\"settings\">\r\n                                //         <MoreVertIcon />\r\n                                //     </IconButton>\r\n                                // }\r\n                                title={card && card.rssTitle ? card.rssTitle : \"\"}\r\n                                subheader={card && card.pubDate ? card.pubDate : \"\"}\r\n                            />\r\n                            <CardMedia\r\n                                className={classes.cardMedia}\r\n                                image={getImageUrl(card)}\r\n                                title=\"Image title\"\r\n                            />\r\n                            <CardContent className={classes.cardContent}>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {card.title}\r\n                                </Typography>\r\n                                <Typography>\r\n                                    {card.description}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\" color=\"primary\" onClick={() => {\r\n                                    window.location = card.link\r\n                                }}>\r\n                                    View\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Grid container justify=\"center\">\r\n                <div className={classes.root} style={{marginBottom: \"50px\", marginTop: \"150px\"}}>\r\n                    <Pagination count={pageCount} color=\"secondary\" onChange={handleChange} />\r\n                </div>\r\n            </Grid>\r\n        </Container>\r\n    ) : !props.error ? (\r\n        <Grid container justify=\"center\">\r\n            <CircularProgress/>\r\n        </Grid>\r\n    ) : (\r\n        <Grid container justify=\"center\">\r\n            <Alert severity=\"error\" className={classes.margin}>Unable to load rss feeds. Please try again later.</Alert>\r\n        </Grid>\r\n    );\r\n\r\n}","const max = 30;\r\n\r\nfunction paginate(list, pageSize, pageNumber) {\r\n    return list.slice((pageNumber - 1) * pageSize, pageNumber * pageSize);\r\n}\r\n\r\nfunction getPageCount(listSize){\r\n    return Math.ceil(listSize / max);\r\n}\r\n\r\nfunction getElementsPerPage(){\r\n    return max;\r\n}\r\n\r\nexport {paginate, getPageCount, getElementsPerPage}","import React from \"react\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        color: \"#fff\"\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n        color: \"#fff\",\r\n        \"&:before\": {\r\n            border: \"none\"\r\n        },\r\n        '&:hover:not(.Mui-disabled):before': {\r\n            border: 'none',\r\n        }\r\n    },\r\n    icon: {\r\n        fill: \"#fff\",\r\n    },\r\n    sortColor: {\r\n        color: \"fff\"\r\n    }\r\n}));\r\n\r\nexport default function SortBySelect(props){\r\n    const classes = useStyles();\r\n    const [sortBy, setSortBy] = React.useState('');\r\n\r\n    const handleChange = (event) => {\r\n        let value = event.target.value;\r\n        setSortBy(value);\r\n        props.sort(value)\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            {/*<InputLabel shrink id=\"sortBy\" className={classes.sortColor}>*/}\r\n                {/*Sort By*/}\r\n            {/*</InputLabel>*/}\r\n            <Select\r\n                labelId=\"sortBy\"\r\n                id=\"sort\"\r\n                value={sortBy}\r\n                onChange={handleChange}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n                inputProps={{\r\n                classes: {\r\n                    icon: classes.icon,\r\n                },\r\n            }}\r\n\r\n            >\r\n                <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                </MenuItem>\r\n                {props.titles && props.titles.length > 0 && props.titles.map((title, index) => (\r\n                    <MenuItem key={index} value={title}>{title}</MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}","import NewsTiles from './NewsTiles';\r\nimport React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport RssFeedIcon from '@material-ui/icons/RssFeed';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SortBySelect from './SortBySelect';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                busyBodyFeeder.com\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nexport default function Main(props){\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <RssFeedIcon/>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        RSS Feeds\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={props.search}\r\n                        />\r\n                    </div>\r\n                    <SortBySelect titles={props.titles} sort={props.sort} />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main>\r\n                {/* Hero unit */}\r\n                <div className={classes.heroContent}>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                            Daily Feeds\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                            Are you a busy body when it comes to news? Take a gander at all these articles from various RSS feeds.\r\n                            You can search for feeds in the search bar or sort by your favorite feeds.\r\n                        </Typography>\r\n                    </Container>\r\n                </div>\r\n                <NewsTiles rss={props.rss} error={props.error} />\r\n            </main>\r\n            {/* Footer */}\r\n            <footer className={classes.footer}>\r\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                    Busy Body RSS Feeder\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                    Thanks for checking out the site\r\n                </Typography>\r\n                <Copyright />\r\n            </footer>\r\n            {/* End footer */}\r\n        </React.Fragment>\r\n    );\r\n}","import axios from \"axios\";\r\n\r\nconst proxy = \"https://cors-anywhere.herokuapp.com/\";\r\n// const proxy = \"https://cors-proxy.htmldriven.com/?url=\";\r\n// const proxy = \"http://www.whateverorigin.org/get?url=\";\r\n\r\nclass Feed {\r\n    constructor(id, path){\r\n        this.id = id;\r\n        this.path = path;\r\n    }\r\n\r\n    getPath(){\r\n        return this.path;\r\n    }\r\n\r\n    getId(){\r\n        return this.id;\r\n    }\r\n}\r\n\r\nconst feeds = [new Feed('cnn', 'http://rss.cnn.com/rss/cnn_topstories.rss'),\r\n    new Feed('bbc', 'http://feeds.bbci.co.uk/news/rss.xml#'),\r\n    new Feed('fox', 'http://feeds.foxnews.com/foxnews/latest'),\r\n    new Feed('wsj', 'https://feeds.a.dj.com/rss/RSSWSJD.xml'),\r\n    new Feed('nyt', 'https://archive.nytimes.com/www.nytimes.com/services/xml/rss/index.html?mcubz=0'),\r\n    new Feed('yahoo', 'https://www.yahoo.com/news/rss/world')];\r\n\r\nfunction getFeeds(){\r\n    return feeds.map((feed) => {\r\n        return axios.get(proxy + encodeURI(feed.getPath()));\r\n    });\r\n}\r\n\r\nfunction addFeed(id, path){\r\n    if(id && path){\r\n        feeds.push(new Feed(id, path));\r\n    } else {\r\n        console.error('invalid feed');\r\n    }\r\n}\r\n\r\nexport {getFeeds, addFeed};","import React from \"react\";\r\nimport \"./App.css\";\r\nimport _ from 'lodash';\r\nimport convertXmlToJson from './Parser';\r\nimport Main from './Main';\r\nimport {getFeeds} from './FeedFeeder';\r\n\r\nlet rssOriginal = [];\r\nlet rssTitles = [];\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            rss: [],\r\n            error: false\r\n        };\r\n\r\n        this.search = this.search.bind(this);\r\n        this.sort = this.sort.bind(this);\r\n        this.transformFeeds = this.transformFeeds.bind(this);\r\n    }\r\n\r\n    search(e){\r\n        let value = e.target.value;\r\n        if(value === \"\"){\r\n            this.setState({rss: _.cloneDeep(this.transformFeeds(rssOriginal))});\r\n            return;\r\n        }\r\n\r\n        if(value.length >= 3){\r\n            let regSearchValue = new RegExp(value, 'gi');\r\n\r\n            const items = _.cloneDeep(this.state.rss);\r\n\r\n            let foundItems = items.filter((item) => {\r\n                return (item && item[\"description\"] && (item[\"description\"].search(regSearchValue) !== -1))\r\n                    || (item && item[\"title\"] && (item[\"title\"].search(regSearchValue) !== -1));\r\n            });\r\n\r\n            if(foundItems.length > 0){\r\n                this.setState({rss: foundItems});\r\n            }\r\n        }\r\n    }\r\n\r\n    sort(feed){\r\n        if(feed === \"\"){\r\n            this.setState({rss: this.transformFeeds(rssOriginal)});\r\n            return;\r\n        }\r\n\r\n        const rssFeeds = _.cloneDeep(rssOriginal);\r\n        let foundFeed = rssFeeds.find(rss => (\r\n            rss && rss[\"title\"] && rss[\"title\"] === feed\r\n        ));\r\n\r\n        if(foundFeed){\r\n            this.setState({rss: this.transformFeeds(foundFeed)});\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var that = this;\r\n        Promise.all(getFeeds())\r\n            .then((results) => {\r\n                let feeds = results.map(function(result) {\r\n                    let objFeed = convertXmlToJson(result.data);\r\n                    if(!_.isEmpty(objFeed) && objFeed[\"channel\"]){\r\n                        return objFeed[\"channel\"];\r\n                    }\r\n                });\r\n                rssOriginal = feeds;\r\n                feeds.forEach(feed => {\r\n                    if(feed){\r\n                        rssTitles.push(feed[\"title\"]);\r\n                    }\r\n                });\r\n                that.setState({rss: that.transformFeeds(feeds)});\r\n            })\r\n            .catch((error) => {\r\n                that.setState({error: true});\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    updateFeed(feed, convertedFeeds){\r\n        if(feed){\r\n            let title = feed[\"title\"];\r\n            let item = feed[\"item\"];\r\n            let image = feed[\"image\"];\r\n\r\n            if(item){\r\n                for(var j=0; j<item.length; j++){\r\n                    let element = item[j];\r\n                    element[\"rssTitle\"] = title;\r\n                    element[\"rssImage\"] = image;\r\n                    convertedFeeds.push(element);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    transformFeeds(feeds){\r\n        //converts the feed to an object of only items containing the rss title\r\n        let convertedFeeds = [];\r\n        if(feeds && feeds.length){\r\n            for(var i=0; i<feeds.length;i++){\r\n                let feed = feeds[i];\r\n                this.updateFeed(feed, convertedFeeds);\r\n            }\r\n        } else if(feeds) {\r\n            this.updateFeed(feeds, convertedFeeds);\r\n        }\r\n\r\n        return convertedFeeds;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Main rss={this.state.rss} error={this.state.error} titles={rssTitles} search={this.search} sort={this.sort} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}